---

stages:
  - build-image
  - test-image

image: docker
services:
- docker:dind

# set up dev environment - run for every branch except master
.dev_env: &dev_env
  environment: dev
  variables:
    env_tag: 'dev'
  except:
    - master

# set up prd environment - run for only master branch
.prd_env: &prd_env
  environment: prd
  variables:
    env_tag: 'prd'
  only:
    - master

# set varialbes
variables:
  GIT_SSL_NO_VERIFY: "true"
  container_image: "ubuntu1804-iac-runner-image"
  my_registry: "peterhynes"

#build and push dev image
build-dev-image:
  stage: build-image
  <<: *dev_env
  script:
    - docker login -u "${my_registry}" -p "${DOCKERHUBPW}"
    - echo "Building container image $container_image"
    - docker build -t "${container_image}" .
    - docker run "${container_image}"
    - docker tag "${container_image}" "${my_registry}"/"${container_image}":"${env_tag}"
    - docker push "${my_registry}"/"${container_image}":"${env_tag}"

#build and push prd image
build-prd-image:
  stage: build-image
  <<: *prd_env
  script:
    - docker login -u "${my_registry}" -p "${DOCKERHUBPW}"
    - echo "Building container image $container_image"
    - docker build -t "${container_image}" .
    - docker run "${container_image}"
    - docker tag "${container_image}" "${my_registry}"/"${container_image}":"${env_tag}"
    - docker push "${my_registry}"/"${container_image}":"${env_tag}"

# pull and test dev image
test-dev-image:
  stage: test-image
  <<: *dev_env
  image: ${my_registry}/${container_image}:${env_tag}
  script:
    - ansible --version
    - molecule --version
    - terraform --version
    - packer -version
    - docker --version
  except:
    - master

# pull and test prd image
test-prd-image:
  stage: test-image
  <<: *prd_env
  image: ${my_registry}/${container_image}:${env_tag}
  script:
    - ansible --version
    - molecule --version
    - terraform --version
    - packer -version
    - docker --version
  only:
    - master
